# Generated by Django 4.1.2 on 2022-11-24 16:00

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('age', models.PositiveIntegerField(verbose_name='年齢')),
                ('subject', models.CharField(choices=[('国語', '国語'), ('数学', '数学'), ('英語', '英語'), ('物理', '物理'), ('生物', '生物'), ('化学', '化学'), ('地理', '地理'), ('世界史', '世界史'), ('日本史', '日本史'), ('政経', '政経')], max_length=5, verbose_name='教科')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='名前', max_length=30, verbose_name='名前')),
                ('age', models.PositiveIntegerField(verbose_name='年齢')),
                ('subject', models.CharField(choices=[('国語', '国語'), ('数学', '数学'), ('英語', '英語'), ('物理', '物理'), ('生物', '生物'), ('化学', '化学'), ('地理', '地理'), ('世界史', '世界史'), ('日本史', '日本史'), ('政経', '政経')], max_length=5, verbose_name='教科')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Student', to=settings.AUTH_USER_MODEL, verbose_name='担当教師')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='授業日')),
                ('time', models.CharField(choices=[('15:00', '15:00'), ('16:00', '16:00'), ('17:00', '17:00'), ('18:00', '18:00'), ('19:00', '19:00'), ('20:00', '20:00'), ('21:00', '21:00'), ('22:00', '22:00')], max_length=5, verbose_name='授業開始時間')),
                ('subject', models.CharField(choices=[('国語', '国語'), ('数学', '数学'), ('英語', '英語'), ('物理', '物理'), ('生物', '生物'), ('化学', '化学'), ('地理', '地理'), ('世界史', '世界史'), ('日本史', '日本史'), ('政経', '政経')], max_length=5, verbose_name='教科')),
                ('is_checked', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Lesson', to='student_scheduler.student', verbose_name='生徒')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Lesson', to=settings.AUTH_USER_MODEL, verbose_name='教師')),
            ],
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('date', 'time', 'teacher'), name='dt_teacher_unique'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('date', 'time', 'student'), name='dt_student_unique'),
        ),
    ]
